# Copyright (c) 2018 GitHub, Inc.
# Use of this source code is governed by the MIT license that can be
# found in the LICENSE file.

import("//build/config/ui.gni")
import("//components/spellcheck/spellcheck_build_features.gni")
import("//electron/buildflags/buildflags.gni")
import("//printing/buildflags/buildflags.gni")
import("//third_party/widevine/cdm/widevine.gni")

# Builds some of the chrome sources that Electron depends on.
static_library("chrome") {
  visibility = [ "//electron:electron_lib" ]
  sources = [
    "//chrome/browser/browser_process.cc",
    "//chrome/browser/browser_process.h",
    "//chrome/browser/devtools/devtools_contents_resizing_strategy.cc",
    "//chrome/browser/devtools/devtools_contents_resizing_strategy.h",
    "//chrome/browser/devtools/devtools_embedder_message_dispatcher.cc",
    "//chrome/browser/devtools/devtools_embedder_message_dispatcher.h",
    "//chrome/browser/devtools/devtools_file_system_indexer.cc",
    "//chrome/browser/devtools/devtools_file_system_indexer.h",
    "//chrome/browser/extensions/global_shortcut_listener.cc",
    "//chrome/browser/extensions/global_shortcut_listener.h",
    "//chrome/browser/extensions/global_shortcut_listener_mac.h",
    "//chrome/browser/extensions/global_shortcut_listener_mac.mm",
    "//chrome/browser/extensions/global_shortcut_listener_win.cc",
    "//chrome/browser/extensions/global_shortcut_listener_win.h",
    "//chrome/browser/icon_loader.cc",
    "//chrome/browser/icon_loader.h",
    "//chrome/browser/icon_loader_mac.mm",
    "//chrome/browser/icon_loader_win.cc",
    "//chrome/browser/icon_manager.cc",
    "//chrome/browser/icon_manager.h",
    "//chrome/browser/net/chrome_mojo_proxy_resolver_factory.cc",
    "//chrome/browser/net/chrome_mojo_proxy_resolver_factory.h",
    "//chrome/browser/net/proxy_config_monitor.cc",
    "//chrome/browser/net/proxy_config_monitor.h",
    "//chrome/browser/net/proxy_service_factory.cc",
    "//chrome/browser/net/proxy_service_factory.h",
    "//chrome/browser/predictors/preconnect_manager.cc",
    "//chrome/browser/predictors/preconnect_manager.h",
    "//chrome/browser/predictors/predictors_features.cc",
    "//chrome/browser/predictors/predictors_features.h",
    "//chrome/browser/predictors/proxy_lookup_client_impl.cc",
    "//chrome/browser/predictors/proxy_lookup_client_impl.h",
    "//chrome/browser/predictors/resolve_host_client_impl.cc",
    "//chrome/browser/predictors/resolve_host_client_impl.h",
    "//chrome/browser/ssl/security_state_tab_helper.cc",
    "//chrome/browser/ssl/security_state_tab_helper.h",
    "//chrome/browser/ssl/tls_deprecation_config.cc",
    "//chrome/browser/ui/autofill/popup_view_common.cc",
    "//chrome/browser/ui/autofill/popup_view_common.h",
    "//chrome/browser/win/chrome_process_finder.cc",
    "//chrome/browser/win/chrome_process_finder.h",
    "//extensions/browser/app_window/size_constraints.cc",
    "//extensions/browser/app_window/size_constraints.h",
  ]
  public_deps = [
    "//chrome/common",
    "//chrome/common:version_header",
    "//components/keyed_service/content",
    "//components/proxy_config",
    "//components/security_state/content",
    "//content/public/browser",
  ]
  deps = [
    "//chrome/browser:resource_prefetch_predictor_proto",
    "//components/feature_engagement:buildflags",
  ]

  if (is_linux) {
    sources += [ "//chrome/browser/icon_loader_auralinux.cc" ]
    sources += [
      "//chrome/browser/extensions/global_shortcut_listener_x11.cc",
      "//chrome/browser/extensions/global_shortcut_listener_x11.h",
      "//chrome/browser/ui/views/status_icons/concat_menu_model.cc",
      "//chrome/browser/ui/views/status_icons/concat_menu_model.h",
      "//chrome/browser/ui/views/status_icons/status_icon_linux_dbus.cc",
      "//chrome/browser/ui/views/status_icons/status_icon_linux_dbus.h",
    ]
    public_deps += [
      "//components/dbus/menu",
      "//components/dbus/thread_linux",
    ]
  }

  if (enable_desktop_capturer) {
    sources += [
      "//chrome/browser/media/webrtc/desktop_media_list.h",
      "//chrome/browser/media/webrtc/desktop_media_list_base.cc",
      "//chrome/browser/media/webrtc/desktop_media_list_base.h",
      "//chrome/browser/media/webrtc/desktop_media_list_observer.h",
      "//chrome/browser/media/webrtc/native_desktop_media_list.cc",
      "//chrome/browser/media/webrtc/native_desktop_media_list.h",
      "//chrome/browser/media/webrtc/window_icon_util.h",
    ]
    deps += [ "//ui/snapshot" ]
  }

  if (enable_color_chooser) {
    sources += [
      "//chrome/browser/platform_util.cc",
      "//chrome/browser/platform_util.h",
      "//chrome/browser/ui/browser_dialogs.h",
      "//chrome/browser/ui/color_chooser.h",
    ]

    if (use_aura) {
      sources += [
        "//chrome/browser/platform_util_aura.cc",
        "//chrome/browser/ui/views/color_chooser_aura.cc",
        "//chrome/browser/ui/views/color_chooser_aura.h",
      ]
      deps += [ "//components/feature_engagement" ]
    }

    if (is_mac) {
      sources += [
        "//chrome/browser/media/webrtc/window_icon_util_mac.mm",
        "//chrome/browser/ui/cocoa/color_chooser_mac.h",
        "//chrome/browser/ui/cocoa/color_chooser_mac.mm",
      ]
      deps += [
        "//components/remote_cocoa/app_shim",
        "//components/remote_cocoa/browser",
      ]
    }

    if (is_win) {
      sources += [
        "//chrome/browser/media/webrtc/window_icon_util_win.cc",
        "//chrome/browser/ui/views/color_chooser_dialog.cc",
        "//chrome/browser/ui/views/color_chooser_dialog.h",
        "//chrome/browser/ui/views/color_chooser_win.cc",
      ]
    }

    if (is_linux) {
      sources += [ "//chrome/browser/media/webrtc/window_icon_util_x11.cc" ]
    }
  }

  if (enable_tts) {
    sources += [
      "//chrome/browser/speech/tts_controller_delegate_impl.cc",
      "//chrome/browser/speech/tts_controller_delegate_impl.h",
    ]
  }

  if (enable_widevine) {
    sources += [
      "//chrome/renderer/media/chrome_key_systems.cc",
      "//chrome/renderer/media/chrome_key_systems.h",
      "//chrome/renderer/media/chrome_key_systems_provider.cc",
      "//chrome/renderer/media/chrome_key_systems_provider.h",
    ]
    deps += [ "//components/cdm/renderer" ]
  }

  if (enable_basic_printing) {
    sources += [
      "//chrome/browser/printing/print_job.cc",
      "//chrome/browser/printing/print_job.h",
      "//chrome/browser/printing/print_job_manager.cc",
      "//chrome/browser/printing/print_job_manager.h",
      "//chrome/browser/printing/print_job_worker.cc",
      "//chrome/browser/printing/print_job_worker.h",
      "//chrome/browser/printing/print_view_manager_base.cc",
      "//chrome/browser/printing/print_view_manager_base.h",
      "//chrome/browser/printing/print_view_manager_basic.cc",
      "//chrome/browser/printing/print_view_manager_basic.h",
      "//chrome/browser/printing/printer_query.cc",
      "//chrome/browser/printing/printer_query.h",
      "//chrome/browser/printing/printing_message_filter.cc",
      "//chrome/browser/printing/printing_message_filter.h",
      "//chrome/browser/printing/printing_service.cc",
      "//chrome/browser/printing/printing_service.h",
    ]

    public_deps += [
      "//chrome/services/printing:lib",
      "//components/printing/browser",
      "//components/printing/renderer",
      "//components/services/pdf_compositor",
      "//components/services/pdf_compositor/public/cpp",
      "//components/services/pdf_compositor/public/mojom",
    ]

    deps += [
      "//components/printing/common",
      "//printing",
    ]

    if (is_win) {
      sources += [
        "//chrome/browser/printing/pdf_to_emf_converter.cc",
        "//chrome/browser/printing/pdf_to_emf_converter.h",
        "//chrome/utility/printing_handler.cc",
        "//chrome/utility/printing_handler.h",
      ]
    }
  }

  if (enable_picture_in_picture) {
    sources += [
      "//chrome/browser/picture_in_picture/picture_in_picture_window_manager.cc",
      "//chrome/browser/picture_in_picture/picture_in_picture_window_manager.h",
      "//chrome/browser/ui/views/overlay/back_to_tab_image_button.cc",
      "//chrome/browser/ui/views/overlay/back_to_tab_image_button.h",
      "//chrome/browser/ui/views/overlay/close_image_button.cc",
      "//chrome/browser/ui/views/overlay/close_image_button.h",
      "//chrome/browser/ui/views/overlay/overlay_window_views.cc",
      "//chrome/browser/ui/views/overlay/overlay_window_views.h",
      "//chrome/browser/ui/views/overlay/playback_image_button.cc",
      "//chrome/browser/ui/views/overlay/playback_image_button.h",
      "//chrome/browser/ui/views/overlay/resize_handle_button.cc",
      "//chrome/browser/ui/views/overlay/resize_handle_button.h",
      "//chrome/browser/ui/views/overlay/skip_ad_label_button.cc",
      "//chrome/browser/ui/views/overlay/skip_ad_label_button.h",
      "//chrome/browser/ui/views/overlay/track_image_button.cc",
      "//chrome/browser/ui/views/overlay/track_image_button.h",
    ]

    deps += [
      "//chrome/app/vector_icons",
      "//components/vector_icons:vector_icons",
    ]
  }
}

# This source set is just so we don't have to depend on all of //chrome/browser
# You may have to add new files here during the upgrade if //chrome/browser/spellchecker
# gets more files
source_set("chrome_spellchecker") {
  sources = [
    "//chrome/browser/spellchecker/spell_check_host_chrome_impl.cc",
    "//chrome/browser/spellchecker/spell_check_host_chrome_impl.h",
    "//chrome/browser/spellchecker/spellcheck_custom_dictionary.cc",
    "//chrome/browser/spellchecker/spellcheck_custom_dictionary.h",
    "//chrome/browser/spellchecker/spellcheck_factory.cc",
    "//chrome/browser/spellchecker/spellcheck_factory.h",
    "//chrome/browser/spellchecker/spellcheck_hunspell_dictionary.cc",
    "//chrome/browser/spellchecker/spellcheck_hunspell_dictionary.h",
    "//chrome/browser/spellchecker/spellcheck_language_blacklist_policy_handler.cc",
    "//chrome/browser/spellchecker/spellcheck_language_blacklist_policy_handler.h",
    "//chrome/browser/spellchecker/spellcheck_language_policy_handler.cc",
    "//chrome/browser/spellchecker/spellcheck_language_policy_handler.h",
    "//chrome/browser/spellchecker/spellcheck_service.cc",
    "//chrome/browser/spellchecker/spellcheck_service.h",
  ]

  if (has_spellcheck_panel) {
    sources += [
      "//chrome/browser/spellchecker/spell_check_panel_host_impl.cc",
      "//chrome/browser/spellchecker/spell_check_panel_host_impl.h",
    ]
  }

  if (use_browser_spellchecker) {
    sources += [
      "//chrome/browser/spellchecker/spelling_request.cc",
      "//chrome/browser/spellchecker/spelling_request.h",
    ]
  }

  deps = [
    "//base:base_static",
    "//components/language/core/browser",
    "//components/spellcheck:buildflags",
    "//components/sync",
  ]

  public_deps = [
    "//components/spellcheck/browser",
    "//components/spellcheck/common",
    "//components/spellcheck/renderer",
  ]
}
